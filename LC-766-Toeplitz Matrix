Question Link - https://leetcode.com/problems/toeplitz-matrix/

Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.
A matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.

Input: matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]
Output: true
Explanation:
In the above grid, the diagonals are:
"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]".
In each diagonal all elements are the same, so the answer is True.


//Approach-1: 
Time Complexity : O(M*N)
Space Complexity : O(M+N)

bool isToeplitzMatrix(vector<vector<int>>& matrix) 
    {
        map<int,int> m;
        for(int i=0;i<matrix.size();i++)
        {
            for(int j=0;j<matrix[0].size();j++)
            {
                if(m.find(i-j) == m.end())
                {
                    m[i-j] = matrix[i][j];
                    
                }
                
                else if(m[i-j] != matrix[i][j])
                {
                    return false;
                }
            }
        }
        
        return true;
        
    }
    
    
//Approach-2 

Time Complexity : O(M*N)
Space Complexity : O(1)

bool isToeplitzMatrix(vector<vector<int>>& matrix) 
    {
        for(int i=0 ; i < matrix.size()-1; i++)
            for(int j = 0; j < matrix[i].size()-1; j++)
                if(matrix[i][j] != matrix[i+1] [j+1])
                    return false;
        
        return true;
    }
    
